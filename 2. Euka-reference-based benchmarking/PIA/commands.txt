#Fastq to fasta
gunzip euksim.fastq.gz
seqret -sequence euksim.fastq -outseq euksim.fasta

#Blast database build
makeblastdb -in ../ref/library/merged_db.fa -parse_seqids -taxid_map ../ref/seqid2taxid.map -dbtype nucl -title blastdb

#Blast run
blastn -db ../ref/library/merged_db.fa -num_threads 1 -query euksim.fasta -out output_blastn  -max_target_seqs 500 -outfmt "6 std staxids"

#PIA
perl PIA.pl -f euksim.fasta -b output_blastn

#Count the number of True Positives
grep target_readID euksim.Summary_Reads.txt | grep 'Target' | wc -l

#False positives:
grep -v target_readID euksim.Summary_Reads.txt | grep 'Target' | wc -l

#False negatives:
grep target_readID euksim.Summary_Reads.txt | grep -v 'Target' | wc -l

#Get off-targets
grep -v Anatidae euksim.Summary_Reads.txt | grep -v Bovidae | grep -v Cervidae |  grep -v Felidae | grep -v Suina | grep -v Pyralidae | grep -v Hominidae | grep -v Canidae | grep -v Galliformes | grep -v Equidae | grep -v Pecora | grep -v Equus | grep -v Cervus | grep -v Homininae | grep -v Felis | grep -v Sus | grep -v Ephestia | grep -v Homo | grep -v Ovis | grep -v Canis | grep -v Anas | grep -v Bos | grep -v Gallus | grep -v Cervinae | grep -v Bovinae | grep -v Suidae | grep -v Anatinae | grep -v Felinae | awk -F'\t' '!/^#/ {split($1, arr, ":");  print arr[1], $(NF)}' | cut -f2 | sort | uniq -c | sort -rn
